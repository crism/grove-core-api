{
  "openapi": "3.0.0",
  "servers": [],
  "info": {
    "description" : "This defines the baseline for middleTier-to-frontEnd Generic Search APIs for MarkLogic-UI-Resources (MUIR).",
    "version": "0.0.1",
    "title": "MUIR Middle-tier Generic Search API",
    "license" : {
      "name" : "Apache-2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "_note": "{pluralType} is just a placeholder, not a real parameter",
    "/{pluralType}/search": {
      "post": {
        "description": "Search through all objects of type `{type}`, returning all available search facets with values as well as matching items",
        "parameters": [
          {
            "name": "pluralType",
            "in": "path",
            "description": "Plural type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }, {
            "in" : "query",
            "name" : "start",
            "description" : "result to start on for pagination",
            "schema" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1
            },
            "required" : false
          }, {
            "in" : "query",
            "name" : "pageLength",
            "description" : "maximum number of results to return",
            "schema" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1
            },
            "required" : false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchFacetsAndResults"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/{pluralType}/search/facets": {
      "post": {
        "description": "Search through all objects of type `{type}`, returning all available search facets with values",
        "parameters": [
          {
            "name": "pluralType",
            "in": "path",
            "description": "Plural type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchFacets"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/{pluralType}/search/results": {
      "post": {
        "description": "Search through all objects of type `{type}`, returning matching items",
        "parameters": [
          {
            "name": "pluralType",
            "in": "path",
            "description": "Plural type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }, {
            "in" : "query",
            "name" : "start",
            "description" : "result to start on for pagination",
            "schema" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1
            },
            "required" : false
          }, {
            "in" : "query",
            "name" : "pageLength",
            "description" : "maximum number of results to return",
            "schema" : {
              "type" : "integer",
              "format" : "int32",
              "minimum" : 1
            },
            "required" : false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "security": [],
  "components": {
    "links": {},
    "callbacks": {},
    "schemas": {
      "SearchRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "queryText": {
            "type": "string"
          },
          "activeConstraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActiveConstraint"
            }
          },
          "query": {
            "$ref": "#/components/schemas/SearchQuery"
          }
        }
      },
      "ActiveConstraint": {
        "description": "`and` and `or` property are mutually exclusive",
        "type": "object",
        "required": [],
        "properties" : {
          "and" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "or" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "eyeColor" : {
            "or" : [ "blue", "brown" ]
          },
          "age" : {
            "and" : [ 21 ]
          }
        }
      },
      "SearchQuery": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "SearchFacetsAndResults": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "start": {
            "type": "integer"
          },
          "pageLength": {
            "type": "integer"
          },
          "facets": {
            "type": "object",
            "properties": {
              "*": {
                "$ref": "#/components/schemas/SearchFacet"
              }
            }
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            }
          }
        },
        "required": [
          "total",
          "facets",
          "results"
        ]
      },
      "SearchResults": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "start": {
            "type": "integer"
          },
          "pageLength": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            }
          }
        },
        "required": [
          "total",
          "results"
        ]
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "matches": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "SearchFacets": {
        "type": "object",
        "properties": {
          "facets": {
            "type": "object",
            "properties": {
              "*": {
                "$ref": "#/components/schemas/SearchFacet"
              }
            }
          }
        },
        "required": [
          "facets"
        ]
      },
      "SearchFacet": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "order": {
            "type": "string",
            "enum": [
              "frequency-order",
              "item-order"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "ascending",
              "descending"
            ]
          },
          "facetValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetValue"
            }
          }
        },
        "required": [
          "facetValues"
        ]
      },
      "FacetValue": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "count"
        ]
      }
    },
    "securitySchemes": {}
  }
}
