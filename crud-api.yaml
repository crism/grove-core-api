openapi: 3.0.0
servers: []
info:
  description: >-
    This defines the baseline for middleTier-to-frontEnd Generic CRUD APIs for
    MarkLogic-UI-Resources (MUIR).
  version: 0.0.1
  title: MUIR Middle-tier Generic CRUD API
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  '/crud/{type}/{id}':
    get:
      description: >-
        Get existing object of type `{type}` with id `{id}`. Types can refer to entities or concepts. Convention is to use the conceptual type `all` to refer to all data in a database.
      parameters:
        - name: type
          in: path
          description: Type of object
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Unique identifier of object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The content of an object, represented in JSON.
          content:
            '*/*':
              schema:
                title: '{type}'
                type: object
                additionalProperties: true
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    post:
      description: |
        Replace content of existing object of type `{type}` with id `{id}`.
      parameters:
        - name: type
          in: path
          description: Type of object
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Unique identifier of object
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              additionalProperties: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    put:
      description: 'Insert new object of type `{type`} and id `{id}`'
      parameters:
        - name: type
          in: path
          description: Type of object
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Unique identifier of object
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '409':
          description: Conflict
    delete:
      description: |
        Delete existing object of type `{type}` with id `{id}`
      parameters:
        - name: type
          in: path
          description: Type of object
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Unique identifier of object
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
security: []
components:
  links: {}
  callbacks: {}
  schemas: {}
  securitySchemes: {}
