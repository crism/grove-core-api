{
  "openapi": "3.0.0",
  "servers": [],
  "info": {
    "description": "This defines the baseline for middleTier-to-frontEnd Authentication APIs for MarkLogic-UI-Resources (MUIR).",
    "version": "0.0.2",
    "title": "MUIR Middle-tier Authentication API",
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Authenticate credentials, and open new user session.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "description": "Login name.",
                    "type": "string"
                  },
                  "password": {
                    "description": "Login password.",
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ],
                "example": {
                  "username": "string",
                  "password": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response at successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          }
        }
      },
      "get": {
        "description": "GET not allowed on login.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "put": {
        "description": "PUT not allowed on login.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "description": "DELETE not allowed on login.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "description": "Flush user session associated with current browser",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "description": "GET not allowed on logout.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "put": {
        "description": "PUT not allowed on logout.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "description": "DELETE not allowed on login.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    },
    "/auth/status": {
      "get": {
        "description": "Verify session status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStatus"
                }
              }
            }
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          }
        }
      },
      "post": {
        "description": "POST not allowed on status.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "put": {
        "description": "PUT not allowed on status.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "description": "DELETE not allowed on status.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "description": "Profile of the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response with current user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          }
        }
      },
      "post": {
        "description": "Update profile of the current user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created profile of current user (if didn't exist yet)"
          },
          "204": {
            "description": "Successfully updated profile of current user (if existed already)"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          }
        }
      },
      "put": {
        "description": "PUT not allowed on profile.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      },
      "delete": {
        "description": "DELETE not allowed on profile.",
        "responses": {
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          }
        }
      }
    }
  },
  "security": [],
  "components": {
    "links": {},
    "callbacks": {},
    "schemas": {
      "SessionStatus": {
        "type": "object",
        "required": [
          "authenticated"
        ],
        "properties": {
          "appName": {
            "type": "string"
          },
          "authenticated": {
            "type": "boolean"
          }
        },
        "example": {
          "authenticated": "boolean"
        }
      },
      "UserProfile": {
        "type": "object",
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "username": "string",
          "fullname": "string",
          "emails": [
            "string"
          ]
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "The endpoint cannot be reached because the request is not authorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errorMessage": "unauthorized"
            }
          }
        }
      },
      "UnsupportedMediaType": {
        "description": "Response when client didn't send JSON",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errorMessage": "Unsupported Media Type"
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "Method Not Allowed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errorMessage": "Method Not Allowed"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Response when credentials are missing",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errorMessage": "Bad Request"
            }
          }
        }
      },
      "NotAcceptable": {
        "description": "Response when client doesn't Accept JSON",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errorMessage": "Not Acceptable"
            }
          }
        }
      },
      "NotFound": {
        "description": "Current user has no profile yet",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errorMessage": "Not Found"
            }
          }
        }
      }
    },
    "securitySchemes": {}
  }
}
