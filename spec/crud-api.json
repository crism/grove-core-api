{
  "openapi": "3.0.0",
  "servers": [],
  "info": {
    "description": "This defines the baseline for middleTier-to-frontEnd Generic CRUD APIs for MarkLogic-UI-Resources (MUIR).",
    "version": "0.10.0-beta",
    "title": "MUIR Middle-tier Generic CRUD API",
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/crud/{type}": {
      "post": {
        "description": "Insert new object of type `{type`} and a server-generated id",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The server-generated ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "example": {
                    "id": "abc123"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "../common/responses.json#/Responses/Unauthorized"
          }
        }
      }
    },
    "/crud/{type}/{id}": {
      "get": {
        "description": "Get content of existing object of type `{type}` with id `{id}`. Types can refer to entities or concepts",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "*/*": {
                "schema": {
                  "title": "{type}",
                  "type": "object",
                  "properties": {
                    "*": {
                      "type": "*"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "../common/responses.json#/Responses/NotFound"
          },
          "401": {
            "$ref": "../common/responses.json#/Responses/Unauthorized"
          }
        }
      },
      "post": {
        "description": "Replace content of existing object of type `{type}` with id `{id}`.\n",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "*": {
                    "type": "*"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "../common/responses.json#/Responses/Unauthorized"
          },
          "404": {
            "$ref": "../common/responses.json#/Responses/IdNotFound"
          }
        }
      },
      "put": {
        "description": "Insert new object of type `{type`} and id `{id}`",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "$ref": "../common/responses.json#/Responses/Conflict"
          },
          "401": {
            "$ref": "../common/responses.json#/Responses/Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete existing object of type `{type}` with id `{id}`\n",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "../common/responses.json#/Responses/Unauthorized"
          },
          "404": {
            "$ref": "../common/responses.json#/Responses/IdNotFound"
          }
        }
      }
    },
    "/crud/{type}/{id}/{view}": {
      "get": {
        "description": "Get alternate view on content of existing object of type `{type}` with id `{id}`",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "Name of the view",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of the alternate view on content of the identified object (if found)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "../common/responses.json#/Responses/BadRequest"
          },
          "401": {
            "$ref": "../common/responses.json#/Responses/Unauthorized"
          },
          "404": {
            "$ref": "../common/responses.json#/Responses/IdNotFound"
          }
        }
      }
    }
  },
  "security": [],
  "components": {
    "links": {},
    "callbacks": {},
    "schemas": {},
    "securitySchemes": {}
  }
}
